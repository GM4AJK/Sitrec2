# ============================================================================
# Sitrec Development Environment - Docker Compose Configuration
# ============================================================================
#
# This Docker Compose file sets up a complete development environment for Sitrec
# with hot module reloading and live file editing capabilities.
#
# ARCHITECTURE:
# -------------
# The container runs two services simultaneously:
#   1. Webpack Dev Server (port 8080) - Frontend with hot reload
#   2. Apache/PHP (port 8081) - Backend API server
#
# The webpack dev server proxies PHP requests to Apache, so you only need
# to access http://localhost:8080 for development.
#
# FILE SYSTEM LAYOUT:
# -------------------
# Source files are mounted at TWO locations to serve different purposes:
#
#   /app/*                    - For webpack dev server and Node.js
#     ├── src/                - JavaScript/CSS source files (hot reload)
#     ├── data/               - Sitch definition files
#     ├── config/             - Configuration files
#     ├── sitrecServer/       - PHP backend files
#     └── node_modules/       - NPM packages (container-only, not mounted)
#
#   /var/www/html/*           - For Apache/PHP server
#     ├── sitrecServer/       - PHP scripts (executed by Apache)
#     ├── data/               - Sitch files (scanned by getsitches.php)
#     ├── sitrec-videos/      - Video files directory
#     └── dist/               - Webpack build output (served by Apache)
#
# HOT RELOAD BEHAVIOR:
# --------------------
#   • JavaScript/CSS (src/): Auto-recompiled by webpack, manual browser refresh required
#   • PHP files (sitrecServer/): Immediately available, requires page refresh
#   • Sitch files (data/): Immediately available, requires page refresh
#   • Webpack config: Requires container restart
#
# USAGE:
# ------
#   docker-compose -f docker-compose.dev.yml build   # Build image
#   docker-compose -f docker-compose.dev.yml up      # Start development
#   docker-compose -f docker-compose.dev.yml down    # Stop and cleanup
#
# See DOCKER-DEV.md for complete documentation.
# ============================================================================

services:
  sitrec-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '8080:8080'  # Webpack dev server (primary access point)
      - '8081:8081'  # Apache/PHP backend (proxied by webpack)
    volumes:
      # ========================================================================
      # WEBPACK/NODE.JS MOUNTS (at /app/)
      # These files are accessed by webpack dev server and Node.js processes
      # ========================================================================
      
      # Source code directories (hot reload enabled for src/)
      # Using 'cached' mode for better performance on Windows/Mac
      - ./src:/app/src:cached
      - ./data:/app/data:cached
      - ./docs:/app/docs:cached
      - ./tools:/app/tools:cached
      - ./config:/app/config:cached
      - ./sitrecServer:/app/sitrecServer:cached
      
      # Webpack configuration files
      - ./webpack.common.js:/app/webpack.common.js:cached
      - ./webpack.dev.js:/app/webpack.dev.js:cached
      - ./webpack.dev.docker.js:/app/webpack.dev.docker.js:cached
      - ./webpack.prod.js:/app/webpack.prod.js:cached
      - ./webpackCopyPatterns.js:/app/webpackCopyPatterns.js:cached
      
      # Favicon and manifest files
      - ./apple-touch-icon.png:/app/apple-touch-icon.png:cached
      - ./favicon-512.png:/app/favicon-512.png:cached
      - ./favicon-32x32.png:/app/favicon-32x32.png:cached
      - ./favicon-16x16.png:/app/favicon-16x16.png:cached
      - ./site.webmanifest:/app/site.webmanifest:cached
      
      # Docker-specific configuration override
      # This replaces config-install.js with Docker-appropriate paths
      - ./config/config-install.docker.js:/app/config/config-install.js
      
      # ========================================================================
      # APACHE/PHP MOUNTS (at /var/www/html/)
      # These files are accessed by Apache web server and PHP scripts
      # ========================================================================
      
      # PHP backend scripts (executed by Apache)
      - ./sitrecServer:/var/www/html/sitrecServer:cached
      
      # Data directory (required by getsitches.php to scan for sitches)
      - ./data:/var/www/html/data:cached
      
      # Tools directory (utilities and helper scripts)
      - ./tools:/var/www/html/tools:cached
      
      # PHP configuration files (read-only to prevent accidental modification)
      # Note: These override any config files in sitrecServer/
      - ./config/config.php:/var/www/html/sitrecServer/config.php:ro
      - ./config/shared.env:/var/www/html/shared.env.php:ro
      
      # Video files directory (served by Apache)
      - ./sitrec-videos:/var/www/html/sitrec-videos:cached
      
      # Terrain tiles directory (served by Apache)
      - ../sitrec-terrain:/var/www/html/sitrec-terrain:cached
      
      # Webpack build output (served by Apache as fallback/static files)
      # Using 'delegated' for write-heavy directories (webpack writes, host reads)
      - ./dist:/var/www/html:delegated
      
      # Favicon and manifest files for Apache (since webpack dev server uses writeToDisk: false)
      # These must be explicitly mounted so Apache can serve them
      - ./apple-touch-icon.png:/var/www/html/apple-touch-icon.png:cached
      - ./favicon-512.png:/var/www/html/favicon-512.png:cached
      - ./favicon-32x32.png:/var/www/html/favicon-32x32.png:cached
      - ./favicon-16x16.png:/var/www/html/favicon-16x16.png:cached
      - ./site.webmanifest:/var/www/html/site.webmanifest:cached
      
      # ========================================================================
      # CONTAINER-MANAGED VOLUMES
      # ========================================================================
      
      # Node modules are kept in container for performance
      # (prevents host filesystem from overwriting container's npm packages)
      - node_modules:/app/node_modules
      
      # Webpack cache for faster rebuilds (persists between container restarts)
      - webpack_cache:/app/node_modules/.cache
      
      # ========================================================================
      # OPTIONAL MOUNTS (uncomment if needed)
      # ========================================================================
      
      # Cache directory for map tiles and other cached data
      # Uncomment to persist cache between container restarts
      - ./sitrec-cache:/var/www/html/sitrec-cache
    environment:
      # Node.js environment mode (enables development features)
      - NODE_ENV=development
      
      # Enable polling for file watching (required for Docker volume mounts)
      # Without this, webpack may not detect file changes on the host
      - CHOKIDAR_USEPOLLING=true
      
      # Use Docker-optimized webpack config for better performance
      # (caching + polling + in-memory serving)
      - WEBPACK_CLI_CONFIG_FILE=webpack.dev.docker.js
      
      # Version identifier (fallback since .git directory is not mounted)
      - VERSION=dev
      
      # Disable hot reload to avoid "Reload site" dialogs in Docker
      - DOCKER_BUILD=true
      
      # Timezone configuration (inherits from host machine's TZ variable)
      # Set automatically by docker-compose from host environment
      - TZ=${TZ:-UTC}
      
    # Enable interactive terminal (useful for debugging)
    stdin_open: true
    tty: true

# Named volumes managed by Docker
volumes:
  # Persistent storage for node_modules (improves performance)
  node_modules:
  # Persistent storage for webpack cache (dramatically speeds up rebuilds)
  webpack_cache: